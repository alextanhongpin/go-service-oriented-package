// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// SmsProvider is an autogenerated mock type for the smsProvider type
type SmsProvider struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, phoneNumber, message
func (_m *SmsProvider) Send(ctx context.Context, phoneNumber string, message string) error {
	ret := _m.Called(ctx, phoneNumber, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, phoneNumber, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSmsProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewSmsProvider creates a new instance of SmsProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSmsProvider(t mockConstructorTestingTNewSmsProvider) *SmsProvider {
	mock := &SmsProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
